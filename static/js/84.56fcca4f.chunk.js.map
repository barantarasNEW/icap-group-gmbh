{"version":3,"file":"static/js/84.56fcca4f.chunk.js","mappings":"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","sources":["components/DarkMode/DarkMode.tsx","components/AdditionalBar/AdditionalBar.tsx","components/BreadCrumbs/BreadCrumbs.tsx","components/Logo/Logo.tsx","components/Navbar/constants.ts","components/Navbar/Navbar.tsx","contexts/MenuContext.ts","components/Header/Header.tsx","components/Move/Move.tsx","components/Nets/constants.ts","components/Nets/Nets.tsx","components/Footer/Footer.tsx","components/ErrorBoundary/ErrorBoundary.tsx","components/Menu/Menu.tsx","components/Layout/Layout.tsx","components/Loader/Loader.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { MdDarkMode } from 'react-icons/md';\nimport { FiSun } from 'react-icons/fi';\nimport './DarkMode.scss';\n\nconst DarkMode = () => {\n  const [isDark, setIsDark] = useState(false);\n\n  const onClick = () => setIsDark(prev => {\n    if (prev) {\n      document.body.classList.remove(\"dark\");\n\n      return false;\n    }\n\n    document.body.classList.add(\"dark\");\n\n    return true;\n  });\n\n  return (\n    <button className=\"dark-mode\" onClick={onClick}>\n      {isDark\n        ? <FiSun  className=\"dark-mode__icon\" />\n        : <MdDarkMode className=\"dark-mode__icon\" />}\n    </button>\n  );\n};\n\nexport default DarkMode;","import { Link } from 'react-router-dom';\nimport DarkMode from '../DarkMode/DarkMode';\nimport './AdditionalBar.scss';\n\nconst AdditionalBar = () => {\n  return (\n    <nav className=\"additional-bar\">\n      <ul className=\"additional-bar__list\">\n        <li className='additional-bar__item'>\n          <DarkMode />\n        </li>\n\n        <li className=\"additional-bar__item\">\n          <Link\n            to=\"https://calendly.com/icapgroup/start\"\n            className=\"btn\"\n            target=\"_blank\"\n          >\n            Contact us\n          </Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default AdditionalBar;","import { Fragment } from \"react\";\nimport { useLocation } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport './BreadCrumbs.scss';\n\nconst BreadCrumbs = () => {\n  const { pathname } = useLocation();\n  const visibleCrumbs = pathname === \"/\" || pathname === \"/home\"\n    ? []\n    : pathname.split(\"/\").slice(1);\n  \n  return (\n    <ul className=\"bread-crumbs\">\n      <li className=\"bread-crumbs__item\">\n        <Link to=\"/\" className=\"bread-crumbs__link\">\n          <img\n            className=\"icon bread-crumbs__icon--home\"\n            src={`${process.env.PUBLIC_URL}/assets/icons/home.svg`}\n            alt=\"icon\"\n          />\n        </Link>\n      </li>\n\n      {visibleCrumbs.map(value => (\n        <Fragment key={value}>\n          <li className=\"bread-crumbs__item\">\n            <img\n              className=\"icon bread-crumbs__icon\"\n              src={`${process.env.PUBLIC_URL}/assets/icons/arrow-right.svg`}\n              alt=\"icon\"\n            />\n          </li>\n\n          <li className=\"bread-crumbs__item\">\n            {value}\n          </li>\n        </Fragment>\n      ))}\n    </ul>\n  );\n};\n\nexport default BreadCrumbs;\n","import { Link } from \"react-router-dom\";\nimport './Logo.scss';\n\nconst Logo = () => {\n  return (\n    <Link to=\"/\" className=\"logo\">\n      <img\n        className=\"logo__icon\"\n        src={`${process.env.PUBLIC_URL}/assets/icons/logo.svg`} \n        alt=\"logo\"\n      />\n\n      <p className=\"logo__text\">\n        IGG\n      </p>\n    </Link>\n  );\n};\n\nexport default Logo;","export const links = [\n  { href: \"/\", name: \"Home\" },\n  { href: \"/solutions\", name: \"Solutions\" },\n];","import { NavLink } from \"react-router-dom\";\nimport { links } from \"./constants\";\nimport \"./Navbar.scss\";\n\nconst Navbar = () => {\n  return (\n   <nav className=\"navbar\">\n      <ul className=\"navbar__list\">\n        {links.map(({ href, name }) => (\n          <li key={href} className=\"navbar__item\">\n            <NavLink to={href} className=\"navbar__link\">\n              {name}\n            </NavLink>\n          </li>\n        ))}\n      </ul>\n   </nav> \n  );\n};\n\nexport default Navbar;","import { createContext } from \"react\";\n\ntype Context = {\n  isMenu: boolean;\n  toggleMenu: () => void;\n};\n\nexport const MenuContext = createContext<Context>({\n  isMenu: false,\n  toggleMenu: () => {},\n});","import { useContext } from 'react';\nimport { AiOutlineMenu } from 'react-icons/ai';\nimport { RxCross1 } from 'react-icons/rx';\nimport AdditionalBar from \"../AdditionalBar/AdditionalBar\";\nimport BreadCrumbs from \"../BreadCrumbs/BreadCrumbs\";\nimport Logo from \"../Logo/Logo\";\nimport Navbar from \"../Navbar/Navbar\";\nimport { MenuContext } from '../../contexts/MenuContext';\nimport './Header.scss';\n\nconst Header = () => {\n  const { isMenu, toggleMenu } = useContext(MenuContext);\n\n  return (\n    <header className=\"header\">\n      <div className=\"header__wrapper\">\n        <div className=\"header__top\">\n          <Logo />\n\n          <Navbar />\n\n          <AdditionalBar />\n        </div>\n\n        <div className=\"header__menu\">\n          <Logo />\n  \n          <button className=\"header__menu-btn\" onClick={toggleMenu}>\n            {!isMenu\n              ? <AiOutlineMenu size={27} />\n              : <RxCross1 size={27} />}\n          </button>\n        </div>\n\n        <div className=\"header__bottom\">\n          <div className=\"container\">\n            <BreadCrumbs />\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;","import { useLocation } from 'react-router';\nimport './Move.scss';\n\nconst Move = () => {\n  const { pathname } = useLocation();\n\n  const onClick = () => {\n    window.scrollTo({ top: 0 });\n  };\n\n  if (pathname === \"/\") {\n    return null;\n  }\n  \n  return (\n    <div className='move'>\n      Back to top\n\n      <button className='move__btn' onClick={onClick}>\n        <img\n          className=\"icon move__icon\"\n          src={`${process.env.PUBLIC_URL}/assets/icons/arrow.svg`}\n          alt=\"icon\"\n        />\n      </button>\n    </div>\n  );\n};\n\nexport default Move;\n","export const nets = [\n  {\n    href: \"https://www.linkedin.com/company/icap-group-gmbh/?viewAsMember=true\",\n    icon: `${process.env.PUBLIC_URL}/assets/icons/in.svg`\n  },\n  {\n    href: \"https://www.instagram.com/wallpapers_quotely/\",\n    icon: `${process.env.PUBLIC_URL}/assets/icons/instagram.svg`\n  }\n];","import { Link } from \"react-router-dom\";\nimport { nets } from \"./constants\";\nimport './Nets.scss';\n\nconst Nets = () => {\n  return (\n    <ul className=\"nets__list\">\n      {nets.map(({ href, icon }) => (\n        <li key={href} className=\"nets__item\">\n          <Link\n            to={href}\n            className=\"nets__link\"\n            target=\"_blank\"\n          >\n            <img\n              className=\"icon nets__icon\"\n              src={icon}\n              alt=\"icon\"\n            />\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Nets;","import Move from \"../Move/Move\";\nimport Logo from \"../Logo/Logo\";\nimport Nets from \"../Nets/Nets\";\nimport './Footer.scss';\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer\">\n      <div className=\"container\">\n        <div className=\"footer__wrapper\">\n          <Logo />\n\n          <Nets />\n\n          <Move />\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;","import { Component, ErrorInfo, ReactNode } from \"react\";\nimport './ErrorBoundary.scss';\n\ntype ErrorBoundaryProps = {\n  children: ReactNode;\n};\n\ntype ErrorBoundaryState = {\n  hasError: boolean;\n  error: Error | null;\n  errorInfo: ErrorInfo | null;\n};\n\nclass ErrorBoundary extends Component<ErrorBoundaryProps, ErrorBoundaryState> {\n  constructor(props: ErrorBoundaryProps) {\n    super(props);\n    this.state = {\n      hasError: false,\n      error: null,\n      errorInfo: null\n    };\n  }\n\n  static getDerivedStateFromError(error: Error): ErrorBoundaryState {\n    return {\n      hasError: true,\n      error,\n      errorInfo: null\n    };\n  }\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo): void {\n    console.error(\"Error:\", error);\n    console.error(\"Error Info:\", errorInfo);\n    this.setState({ errorInfo });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div className=\"error-boundary\">\n          <h1 className=\"error-boundary__title\">Something went wrong</h1>\n          <p>{this.state.error && this.state.error.toString()}</p>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;","import { useContext } from \"react\";\nimport AdditionalBar from \"../AdditionalBar/AdditionalBar\";\nimport Navbar from \"../Navbar/Navbar\";\nimport { MenuContext } from \"../../contexts/MenuContext\";\nimport './Menu.scss';\n\nconst Menu = () => {\n  const { isMenu } = useContext(MenuContext);\n  \n  return (\n    <div\n      className=\"menu\"\n      style={{ transform: `translateX(${isMenu ? '0' : '100%'})` }}\n    >\n      <Navbar />\n\n      <AdditionalBar />\n  </div>\n  );\n};\n\nexport default Menu;","import { Suspense, useEffect, useState } from \"react\";\nimport { Outlet, useLocation } from \"react-router\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport Loader from \"../Loader/Loader\";\nimport ErrorBoundary from \"../ErrorBoundary/ErrorBoundary\";\nimport Menu from \"../Menu/Menu\";\nimport { MenuContext } from \"../../contexts/MenuContext\";\n\nconst Layout = () => {\n  const { pathname } = useLocation();\n  const [isMenu, setIsMenu] = useState(false);\n\n  const onClick = () => setIsMenu(prev => {\n    if (prev) {\n      document.body.style.overflowY = \"scroll\";\n\n      return false;\n    }\n\n    document.body.style.overflow = \"hidden\";\n\n    return true;\n  });\n\n  useEffect(() => {\n    setIsMenu(false);\n    document.body.style.overflowY = \"scroll\";\n  }, [pathname]);\n\n  return (\n    <>\n      <MenuContext.Provider value={{\n        isMenu,\n        toggleMenu: onClick }}\n      >\n        <Header />\n  \n        <Menu />\n      </MenuContext.Provider>\n  \n        <main className=\"main\">\n          <ErrorBoundary>\n            <Suspense fallback={<Loader />}>\n              <Outlet />\n            </Suspense>\n          </ErrorBoundary>\n        </main>\n      <Footer />\n    </>\n  );\n};\n\nexport default Layout;","import { createPortal } from \"react-dom\";\nimport './Loader.scss'\n\nconst Loader = () => {\n  return (\n    <>\n      {createPortal(\n        (\n          <div className=\"lds-dual-ring\" />\n        ),\n        document.getElementById(\"portal\") as HTMLElement\n      )}\n    </>\n  );\n};\n\nexport default Loader;"],"names":["_useState","useState","_useState2","_slicedToArray","isDark","setIsDark","_jsx","className","onClick","prev","document","body","classList","remove","add","children","FiSun","MdDarkMode","_jsxs","DarkMode","Link","to","target","pathname","useLocation","visibleCrumbs","split","slice","src","concat","process","alt","map","value","Fragment","links","href","name","_ref","NavLink","MenuContext","createContext","isMenu","toggleMenu","_useContext","useContext","Logo","Navbar","AdditionalBar","RxCross1","size","AiOutlineMenu","BreadCrumbs","window","scrollTo","top","nets","icon","Nets","Move","ErrorBoundary","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","state","hasError","error","errorInfo","_createClass","key","console","this","setState","toString","Component","style","transform","setIsMenu","useEffect","overflowY","_Fragment","Provider","overflow","Header","Menu","Suspense","fallback","Loader","Outlet","Footer","createPortal","getElementById"],"sourceRoot":""}