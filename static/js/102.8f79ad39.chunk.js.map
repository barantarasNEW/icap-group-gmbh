{"version":3,"file":"static/js/102.8f79ad39.chunk.js","mappings":"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","sources":["components/Loader/Loader.tsx","components/Rating/Rating.tsx","components/SolutionsList/SolutionsList.tsx","api/api.ts","pages/Solutions/Solutions.tsx"],"sourcesContent":["import { createPortal } from \"react-dom\";\nimport './Loader.scss'\n\nconst Loader = () => {\n  return (\n    <>\n      {createPortal(\n        (\n          <div className=\"lds-dual-ring\" />\n        ),\n        document.getElementById(\"portal\") as HTMLElement\n      )}\n    </>\n  );\n};\n\nexport default Loader;","import './Rating.scss';\n\ntype Props = {\n  rating: number;\n}\n\nconst Rating: React.FC<Props> = ({ rating }) => {\n  return (\n    <ul className=\"rating__list\">\n      {Array.from({ length: 5 }).map((_, i) => (\n        <li key={i} className=\"rating__item\">\n          <img\n            className='rating__icon'\n            src={`./assets/icons/${i + 1 <= rating\n              ? \"star-y.svg\"\n              : \"star-b.svg\"}`\n            }\n            alt=\"icon\"\n          />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Rating;","import { Link } from \"react-router-dom\";\nimport Rating from \"../Rating/Rating\";\nimport { Solution } from \"../../types/Solution\";\nimport './SolutionsList.scss';\n\ntype Props = {\n  solutions: Solution[];\n};\n\nconst SolutionsList: React.FC<Props> = ({ solutions }) => {\n  return (\n    <ul className=\"solutions-list\">\n      {solutions.map(({\n        id,\n        img,\n        url,\n        title,\n        quote,\n        rating\n      }) => (\n        <li key={id} className=\"solutions-list__item\">\n          <img\n            className=\"solutions-list__img\"\n            src={img}\n            alt=\"\"\n          />\n\n          <div className=\"solutions-list__description\">\n            <h2 className=\"solutions-list__title\">\n              {title}\n            </h2>\n\n            <p className=\"solutions-list__quote\">\n              {quote}\n            </p>\n\n            <Rating rating={rating} />\n          </div>\n\n          <Link\n            to={url}\n            className=\"solutions-list__link\"\n            target=\"_blank\"\n          >\n            Read more\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default SolutionsList;","import { Solution } from \"../types/Solution\";\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL;\n\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nexport const getSolutions = (): Promise<Solution[]> => {\n  return wait(300)\n    .then(() => fetch(`${BASE_URL}/solutions`))\n    .then(response => response.json())\n};\n","import { useEffect, useState } from \"react\";\nimport SolutionsList from \"../../components/SolutionsList/SolutionsList\";\nimport { getSolutions } from \"../../api/api\";\nimport { Solution } from \"../../types/Solution\";\nimport './Solutions.scss';\nimport Loader from \"../../components/Loader/Loader\";\n\nconst Solutions = () => {\n  const [solutions, setSolutions] = useState<Solution[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    getSolutions()\n      .then(res => setSolutions(res))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  return (\n    <section className=\"page__section solutions\">\n      <div className=\"container\">\n        <div className=\"solutions__wrapper\">\n          <h2 className=\"page__title\">\n            Our Projects\n          </h2>\n\n          <SolutionsList solutions={solutions} />\n\n          <p className=\"solutions__quote\">\n            Opportunities don't happen, you create them.\n            <br />\n            <b className=\"solutions__quote--blue\">\n              â€” Chris Grosser\n            </b>\n          </p>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Solutions;"],"names":["_jsx","_Fragment","children","createPortal","className","document","getElementById","_ref","rating","Array","from","length","map","_","i","src","concat","alt","solutions","_ref2","id","img","url","title","quote","_jsxs","Rating","Link","to","target","getSolutions","delay","Promise","resolve","setTimeout","then","fetch","process","response","json","_useState","useState","_useState2","_slicedToArray","setSolutions","_useState3","_useState4","isLoading","setIsLoading","useEffect","res","finally","Loader","SolutionsList"],"sourceRoot":""}